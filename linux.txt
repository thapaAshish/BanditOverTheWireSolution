boJ9jbbUNNfktd78OOpsqOltutMc3MY1
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK
pIwrPrtPN36QITSp3EQaw936yaFoFgAB
Level 4->5:
command used

koReBOKuIDDepwhWk7jZC0RTdopnAYKh   //cake walk till now
-----------------*-------------------------


Level 5->6:
CAT command
MANAGE PROCESSES https://www.howtogeek.com/107217/how-to-manage-processes-from-the-linux-terminal-10-commands-you-need-to-know/
CAT https://www.howtogeek.com/278599/how-to-combine-text-files-using-the-cat-command-in-linux/
GREP  https://www.youtube.com/watch?v=VGgTmxXp7xQ


acts as a revision guide to me
--> cat >> file.txt
allows to append data to file.txt
--> cat file1.txt >> file2.txt
concats the contents of file1.txt to file2.txt at end of line


GREP command
g/re/p -> global regular expression print
for searching specific strings or cases matching The regular expression we provide

flags
-P to use regex i learn in regex101 (forgot the name)

-i case insensitive
-w whole word. equivalent of '\b \b'
-n return line number where the regex matched

-A {variable}return contents above the matched case
example : --> grep -A 2 '\d{3}' .
searches for 3 digits all over the file system and wherever the case is matched shows the contents two lines above it
-B {variable} behind
-C {variable} above and behind

useful feature
grep piping
example : listing process involved with chrome
--> ps -A | grep chrome
lists all the processes involved with chrome
--> ps -A | grep chome | less
look at it at own pace

DU (Disk usage)
flags :
-a for all
-h human readable form
--exclude


find command
exercise : Write a command to list all the mp3 files owned by the user
useful flags
-size
-name
-user
-owner

Password for next level : DXjZPULLxYr17uwoI01bNLQbtFemEgo7
how was it achived (3 methods)

--> grep -P -wr '[0-9a-zA-Z]{32}' .
this means -P python flavor type
-w whole word
-r recursive (find within all folders and directories)

-->find . -size 1033c
here . means everything present within the directory currently placed on
1033c means 1033 bytes

-->find -readable -size 1033c \! -executable     //(more complete version)
-readable if data is readable
\! -executable -> data is not executable

Level 6 -> Level 7

password for next level : HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

how was it achieved
get into root directory
$ cd /
$ find . -size 33c -user bandit7 -group bandit6


Level 7 ->level 8

password for next level : cvX2JJa4CFALtqS87jk27qwqGhBM9plV

how was it achieved
$ grep 'millionth' data.txt
$ grep -win -C 2 'millionth' data.txt   //for more context

Level 8-> level 9

piping methods reference : http://www.westwind.com/reference/os-x/commandline/pipes.html:

>  to redirect output from command to disk
example: 
$ ps -ax > process.txt

>> to append

tee - can be used in middle of pipe and allows to be written into text file then another command can be used
$ ps -ax | tee processes.txt | less


password for next level : UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

commands used:

$ ssh -p 2220 bandit8@bandit.labs.overthewire.org "sort data.txt" > log.txt  (what this does is basically stores sorted data from ssh server to local computer

GREP method:
open atom 
then use regex finder. the regex is
^(.*)(\r?\n\1)+$
how does it work?  (.*)-> matches all characters (except terminating characters) zero or more times 
                   (\r?\n\1)+ -> carriage return will move everything to leftmost side zero or one times. \n is going to move to next line. \1 matches recently matched group i.e whatever is present in (.*). 


level 9 -> level 10
password for next level : truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk

how was that achieved. 
just looked for = to sign 
grep '={2,}' data.txt
returned 5 results and one of them was password

base64:
String taken in multiple of 3
Converted into ascii then the ascii number into binary

24 wota bit
Divide that by 6
Binary converted into decimal
Then base64 chart

level 10-> level 11
password for next level: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

procedure to achive the password.

$ base64 -d data.txt
 
level 11 -> level 12
password for next level : 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

ROT13 or rotate by 13 is text ciphering method used typically in forums to hide spoilers.
it works by returning character which is 13th position away from it.
if A is given as input then N is the output.similarly
B -> O

ROT13(ROT13(X)) = X because there are 26 characters in english alphabet.

procedure to achieve the password.

$ssh -p 2220 bandit11@bandit.labs.overthewire.org "cat data.txt" > 1.txt
for lowercase characters
$cat 1.txt | tr [a-z] [n-za-m] > 2.txt     

for uppercase characters
$cat 2.txt | tr [A-Z] [N-ZA-M] > password.txt



Level 12 -> Level 13
password for next level : 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

Some Reading material::

HexDump: 
https://en.wikipedia.org/wiki/Hex_dump    
https://www.suse.com/c/making-sense-hexdump/

Commands used::
xxd, gzip , mv, cat, bzip2, tar

procedure to achive password: 
$ ssh -p 2220 bandit12@bandit.labs.overthewire.org "xxd -r data.txt" > compressedfile
$ file compressedfile
$ mv compressedfile compressedfile.gz
$ gzip -d compressedfile.gz
$ ls
$ file compressedfile
$ bzip2 -d compressedfile
$ file compressedfile.out
$ mv compressedfile.out compressedfile.gz
$ gzip -d compressedfile.gz
$ file compressedfile
$ tar -x -f compressedfile   //dat5.bin creation
...... and so on

until password is found


Level 13 -> Level 14
password for next level : 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
reading material :
https://help.ubuntu.com/community/SSH/OpenSSH/Keys
https://en.wikipedia.org/wiki/Public-key_cryptography 


procedure to achieve password:
save the key sshkey.private on your local computer
this step is on your local machine and i saved the file as sshkey.private


Level 14 -> Level 15
procedure to get into this level
$ chmod 600 sshkey.private
$ ssh -i sshkey.private -p 2220 bandit14@bandit.labs.overthewire.org

password for next level : BfMYroe26WYalil77FoDi9qh59eK5xNr


procedure to get into next level:
loginto your level.
then type this command.

bandit14@bandit:~$ nc -v localhost 30000


Level 15 -> Level 16

password for next level : cluFn7wTiGryunymYOu4RcffSxQluehd

procedure:
$ openssl s_client -connect localhost:30001
then paste password achieved from previous level


Level 16 -> Level 17

RSA Key is given for next level.

procedure:
$ nc -zv localhost 31000-32000

or 

$ nmap localhost -p 31000-32000


 
Level 17 -> Level 18
password for next level : kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd

procedure to achieve password
$ diff passwords.new passwords.old




